stages:
  - setup
  - build
  - deploy

variables:
  NODE_VERSION: "22.15.0"
  PHP_VERSION: "8.4.1"

cache:
  paths:
    - vendor/
    - node_modules/
    - public/build/

setup_dependencies:
  stage: setup
  image: ubuntu:22.04
  before_script:
    - curl -fsSL https://deb.nodesource.com/setup_22.x | bash -
    - apt-get install -y nodejs
    - npm install -g npm@latest

    - apt-get install -y software-properties-common
    - add-apt-repository ppa:ondrej/php -y
    - apt-get update
    - apt-get install -y php8.4 php8.4-cli php8.4-zip php8.4-mbstring php8.4-xml php8.4-curl php8.4-pgsql unzip
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  script:
    - node --version
    - php --version
    - npm install
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
  artifacts:
    paths:
      - vendor/
      - node_modules/
    expire_in: 1 week

build_project:
  stage: build
  image: node:${NODE_VERSION}
  before_script:
    - apt-get update && apt-get install -y php8.4-cli
  script:
    - npm run build
    - php artisan optimize:clear
    - php artisan optimize
  needs: ["setup_dependencies"]
  artifacts:
    paths:
      - public/build/
      - bootstrap/cache/
    expire_in: 1 week

deploy_to_railway:
  stage: deploy
  image: node:${NODE_VERSION}
  before_script:
    - npm install -g railway@latest
  script:
    - railway login --token $RAILWAY_TOKEN
    - railway up --project $RAILWAY_PROJECT_ID --detach
  only:
    - main
  needs: ["build_project"]
